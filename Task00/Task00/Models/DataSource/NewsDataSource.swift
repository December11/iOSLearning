//
//  NewsDataSource.swift
//  Task00
//
//  Created by üë©üèª‚Äçüé® üì± december11 on 18.06.2022.
//

import UIKit


struct NewsDataResponse {
    let type: String
    let header: String?
    let imageURL: String?
    let title: String?
    let backgroundHexColor: String?
    let descriptions: [String]
}

/// –° –±—ç–∫–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç –º–∞—Å—Å–∏–≤ NewsDataResponse, –≥–¥–µ –µ—Å—Ç—å —Ç–∏–ø –º–æ–¥–µ–ª–∏ ("header"/ "detail"/"backgroundColoredSpace"/ "image")
/// –ö–æ–≥–¥–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç type: "header" - –Ω–∞–¥–æ –±—Ä–∞—Ç—å –≤ —Å–≤–æ—é –º–æ–¥–µ–ª—å –ø—Ä–æ–ø–µ—Ä—Ç–∏ header
/// –ö–æ–≥–¥–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç type: "detail" - –Ω–∞–¥–æ –±—Ä–∞—Ç—å –≤ —Å–≤–æ—é –º–æ–¥–µ–ª—å –ø—Ä–æ–ø–µ—Ä—Ç–∏ title –∏ –≤—Å—ë, —á—Ç–æ –≤ descriptions (—Å–∫–ª–µ–∏—Ç—å –≤ –æ–¥–Ω—É –ø—Ä–æ–ø–µ—Ä—Ç–∏ descriptionText —á–µ—Ä–µ–∑ \n)
/// –ö–æ–≥–¥–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç type:  "backgroundColoredSpace" - –Ω–∞–¥–æ –≤–∑—è—Ç—å —Ç–æ–ª—å–∫–æ backgroundHex –∏ –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –µ–≥–æ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å –ø—Ä–æ–ø–µ—Ä—Ç–∏ —Ç–∏–ø–∞ UIColor
/// –ö–æ–≥–¥–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç type: "image" - –Ω–∞–¥–æ —Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∞ imageURL –∏ —Å–æ–∑–¥–∞—Ç—å –∏–∑ —Ç–µ–∫—Å—Ç–∞ –ø—Ä–æ–ø–µ—Ä—Ç–∏ —Ç–∏–ø URL, –µ—Å–ª–∏ –æ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π
///
/// –ï—Å–ª–∏ –ø—Ä–∏—à—ë–ª –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π type: "unknown" –∏–ª–∏ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π, —Ç–æ –µ–≥–æ –Ω–µ –Ω–∞–¥–æ —É—á–∏—Ç—ã–≤–∞—Ç—å –∏ —Å—Ç–æ–∏—Ç –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–æ ViewModels
/// –ë—Ä–∞—Ç—å –≤ —Å–≤–æ—é –º–æ–¥–µ–ª—å - —ç—Ç–æ —Å–æ–∑–¥–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å –ø–æ—Å—Ç—Ñ–∏–∫—Å–æ–º ViewModel, –ø—Ä–∏–º–µ—Ä –¥–ª—è —Ç–∏–ø–∞ header  –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —Ç–∞–∫:

//struct HeaderViewModel {
//    let header: String
//}

/// —Ç–∞–∫–∏–µ –∂–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –Ω–∞–¥–æ —Å–¥–µ–ª–∞—Ç—å –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö viewModels

final class NewsDataSource {

    // TO-DO –Ω–∞–¥–æ —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫, —á—Ç–æ–±—ã –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å—é–¥–∞ - –æ–±–Ω–æ–≤–ª—è–ª–∏—Å—å –¥–∞–Ω–Ω—ã–µ –≤ currentScreenItems, –≤—ã–∑—ã–≤–∞–≤ makeScreenItems
    private var loadedResponseModels: [NewsDataResponse]

    init() {
        loadedResponseModels = calculateRandomResponse()
    }

    // SomeYourType - —ç—Ç–æ –∫–∞–∫–æ–π-—Ç–æ —Ç–∏–ø, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ–±—ä–µ–¥–∏–Ω—è—Ç—å/—Ä–∞–∑–¥–µ–ª—è—Ç—å –≤—Å–µ —Ç–≤–æ–∏ ViewModels —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤
    // var currentScreenItems: [SomeYourType] = [] // —Å—Ç—Ä–æ—á–∫—É –Ω–∞–¥–æ —Ä–∞—Å–∫–æ–º–µ–Ω—Ç–∏—Ç—å, –∫–∞–∫ –ø—Ä–∏–¥—É–º–∞–µ—à—å —Ç–∏–ø.

    func item(at index: Int) {
        // TO-DO –ù–∞–¥–æ —á—Ç–æ–±—ã —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–ª –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–∏–ø SomeYourType –∏–∑ –º–∞—Å—Å–∏–≤–∞ currentScreenItems (–ø—Ä–∏ —ç—Ç–æ–º —É—á–∏—Ç—ã–≤–∞—è –∏–Ω–¥–µ–∫—Å—ã, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –∫—Ä—ç—à–µ–π)
    }

    func refreshScreenItems() {
        loadedResponseModels = calculateRandomResponse()
    }

    func makeScreenItems(from responseData: [[NewsDataResponse]]) {
        // TO-DO –º–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –º–∞—Å—Å–∏–≤ [SomeYourType]
    }
}

/*
    1) –ù–∞–¥–æ —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–∏ ViewModels –ø–æ –ø—Ä–∏–º–µ—Ä—É HeaderViewModel
    2) –ü–æ—Å–∫–æ–ª—å–∫—É HeaderViewModel/DetailViewModel/BackgroundSpaceViewModel/ImageViewModel —Ä–∞–∑–Ω—ã–µ, –∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –≤ –º–µ—Ç–æ–¥–µ
    makeScreenItems –Ω–∞–º –Ω–∞–¥–æ —á—Ç–æ-—Ç–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞, –Ω–∞–¥–æ –ø–æ–¥—É–º–∞—Ç—å –∫–∞–∫ –∏—Ö –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω—è–ª—Å—è –ø–æ—Ä—è–¥–æ–∫ –∏
    –≤–æ–∑–≤—Ä–∞—â–∞–ª—Å—è –º–∞—Å—Å–∏–≤ [SomeYourType]
    3) –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ item(at index: Int)
    4) –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª —Å–æ –≤—Å–µ–º–∏ internal (–Ω–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–º–∏) –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞–º–∏.
    5) –ü–æ–¥–ø–∏—Å–∞—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª –Ω–∞ NewsDataSource, —Å–¥–µ–ª–∞—Ç—å –ø—Ä–æ–ø–µ—Ä—Ç–∏ currentScreenItems - —Ç–æ–ª—å–∫–æ –Ω–∞ —á—Ç–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ø—Ä–æ—Ç–æ–∫–æ–ª.
    6) –°–æ–∑–¥–∞—Ç—å BeautifulDataSource, –≥–¥–µ –±—É–¥–µ—Ç –∞–±—Å–æ–ª—é—Ç–Ω–æ —Ç–∞–∫–æ–π –∂–µ –∏–Ω–∏—Ç –∏ —Å—Ö–æ–∂–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è
    , –Ω–æ —Å –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–º —Ä–∞–∑–ª–∏—á–∏–µ–º, –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è:

    struct SeparatorViewModel {
        let separatorWidth: CGFloat // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤ 300.0
    }

    –í –º–µ—Ç–æ–¥ calculateRandomResponse() –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–¥–æ –¥–æ–±–∞–≤–ª—è—Ç—å, —Å —Å–µ–ø–∞—Ä–∞—Ç–æ—Ä–æ–º —Ä–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ, –≥–¥–µ ViewModels

    –°–µ–ø–∞—Ä–∞—Ç–æ—Ä –Ω–∞–¥–æ –≤—Å—Ç–∞–≤–ª—è—Ç—å –º–µ–∂–¥—É currentScreenItems, —Ç–æ –µ—Å—Ç—å,
    –µ—Å–ª–∏ —Ä–∞–Ω—å—à–µ —É –Ω–∞—Å –±—ã–ª [HeaderViewModel, DetailViewModel, BackgroundSpaceViewModel], —Ç–æ —Ç–µ–ø–µ—Ä—å –±—É–¥–µ—Ç
    [HeaderViewModel, SeparatorViewModel, DetailViewModel, SeparatorViewModel, BackgroundSpaceViewModel]

    –ù–∞–¥–æ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ—Ç—å:
        - –µ—Å–ª–∏ –±—É–¥–µ—Ç —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω NewsDataResponse, —Å –∫–∞–∫–∏–º-—Ç–æ —Ç–∏–ø–æ–º, —Ç–æ —Å–µ–ø–∞—Ä–∞—Ç–æ—Ä –Ω–µ –Ω—É–∂–µ–Ω.
        - –µ—Å–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç, —Ç–æ –∑–∞ –Ω–∏–º –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å separator.

    P.S. –º–µ—Ç–æ–¥ func item(at index: Int) -> SomeYourType –ø–æ—Ç—Ä–µ–±—É–µ—Ç –≤ BeautifulDataSource –¥–æ—Ä–∞–±–æ—Ç–∫—É,
    –µ—Å–ª–∏ –≤ —Å—Ç–∞—Ä–æ–º NewsDataSource –º—ã —Ç—É–ø–æ –±—Ä–∞–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –º–∞—Å—Å–∏–≤–∞, —Ç–æ —Ç–µ–ø–µ—Ä—å –º—ã –¥–æ–ª–∂–Ω—ã –±—Ä–∞—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ —ç–ª–µ–º–µ–Ω—Ç–∞.
    –ù–∞–ø—Ä–∏–º–µ—Ä –¥–ª—è –º–∞—Å—Å–∏–≤–∞ [HeaderViewModel, SeparatorViewModel, DetailViewModel, SeparatorViewModel, BackgroundSpaceViewModel],
    –µ—Å–ª–∏ –º—ã –≤–æ–∑—å–º—ë–º —ç–ª–µ–º–µ–Ω—Ç –ø–æ–¥ –∏–Ω–¥–µ–∫—Å–æ–º 3, —Ç–æ —É –Ω–∞—Å –ø–æ–ø–∞–¥—ë—Ç –Ω–∞ SeparatorViewModel => –Ω–∞–¥–æ –≤–∑—è—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç –Ω–µ–≥–æ, —Ç–æ –µ—Å—Ç—å
    BackgroundSpaceViewModel


    –ó–∞–¥–∞–Ω–∏–µ —Å–æ *
    - –ù–∞–ø–∏—Å–∞—Ç—å init –≤ extension –Ω–∞ UIColor, —á—Ç–æ–±—ã –±—ã–ª –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ç–æ—Ä UIColor(hexString: String)
    - –ö–∞–∂–¥—ã–π —Å–ª–µ–¥—É—é—â–∏–π separator –≤ BeautifulDataSource —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å width –Ω–∞ 10 % (–Ω–∞—á–∏–Ω–∞—è —Å 300.0).


    –ü–æ –∏—Ç–æ–≥—É –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–≤–∞ –∫–ª–∞—Å—Å–∞ —Å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º –ø–æ –ø—Ä–∞–≤–∏–ª–∞–º –≤—ã—à–µ. –û–¥–∏–Ω –æ–±—â–∏–π –ø—Ä–æ—Ç–æ–∫–æ–ª.
    –£ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å refreshScreenItems().
 */





/// –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ —Ç—Ä–æ–≥–∞—Ç—å –Ω–µ–ª—å–∑—è, –æ–Ω —Å–∏–º—É–ª–∏—Ä—É–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–¥–∞–Ω–∏—è
private func calculateRandomResponse() -> [NewsDataResponse] {

    let header = NewsDataResponse(
        type: "header",
        header: "–ù–µ–ª—å–∑—è —Å–ª–∏–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —Å –•—É—Ä–∞–ª–∞",
        imageURL: nil,
        title: nil,
        backgroundHexColor: nil,
        descriptions: []
    )

    let detail = NewsDataResponse(
        type: "detail",
        header: nil,
        imageURL: nil,
        title: "–ß—Ç–æ –±—ã–ª–æ –Ω–∞ —Ö—É—Ä–∞–ª–µ –∑–∞ 26.02.98",
        backgroundHexColor: nil,
        descriptions: ["–†–∞—Å—Å–∫–∞–∑–∞–ª–∏ –ø—Ä–æ —Ç–æ, —á—Ç–æ –º—ã –∫—Ä—É—Ç—ã–µ.", "–£–±—Ä–∞–ª–∏ –∫–æ–ø–µ–π–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–±–∞–≤–∏–ª–∏.", "–ú–µ—Ç—Ä–∏–∫–∏ –†–æ—Å—Ç–∞."]
    )

    let backgroundColoredSpace = NewsDataResponse(
        type: "backgroundColoredSpace",
        header: nil,
        imageURL: nil,
        title: nil,
        backgroundHexColor: "#fcba03",
        descriptions: []
    )

    let image = NewsDataResponse(
        type: "image",
        header: nil,
        imageURL: "www.yandex.ru",
        title: nil,
        backgroundHexColor: nil,
        descriptions: []
    )

    let badImage = NewsDataResponse(
        type: "image",
        header: nil,
        imageURL: "KEK KEK KEK",
        title: nil,
        backgroundHexColor: nil,
        descriptions: []
    )

    let badType = NewsDataResponse(
        type: "unknown",
        header: nil,
        imageURL: "KEK KEK KEK",
        title: nil,
        backgroundHexColor: nil,
        descriptions: []
    )

    let detailSecond = NewsDataResponse(
        type: "detail",
        header: nil,
        imageURL: nil,
        title: "–ß—Ç–æ –±—ã–ª–æ –Ω–∞ –¥–∏—Å–∫–∞—à–µ–Ω–µ –≤ iOS –∫–æ–º–∞–Ω–¥–µ",
        backgroundHexColor: nil,
        descriptions: ["–†–∞—Å—Å–∫–∞–∑–∞–ª–∏ –ø—Ä–æ —Ç–æ, —á—Ç–æ –º—ã –∫—Ä—É—Ç—ã–µ.", "–£–±—Ä–∞–ª–∏ –∫–æ–ø–µ–π–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–±–∞–≤–∏–ª–∏.", "–ú–µ—Ç—Ä–∏–∫–∏ –†–æ—Å—Ç–∞."]
    )

    let backgroundColoredSpaceSecond = NewsDataResponse(
        type: "backgroundColoredSpace",
        header: nil,
        imageURL: nil,
        title: nil,
        backgroundHexColor: "#fcba03",
        descriptions: []
    )

    let imageSecond = NewsDataResponse(
        type: "image",
        header: nil,
        imageURL: "www.yandex.ru",
        title: nil,
        backgroundHexColor: nil,
        descriptions: []
    )

    let badImageSecond = NewsDataResponse(
        type: "image",
        header: nil,
        imageURL: "KEK KEK KEK",
        title: nil,
        backgroundHexColor: nil,
        descriptions: []
    )

    let exampleFullArray = [
        header,
        detail,
        backgroundColoredSpace,
        image,
        badImage,
        badType,
        detailSecond,
        backgroundColoredSpaceSecond,
        imageSecond,
        badImageSecond
    ]

    let randomCount = Int(arc4random_uniform(UInt32(exampleFullArray.count - 1)))
    return exampleFullArray.shuffled().dropLast(randomCount)
}
